// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String
  password  String
  phone     String
  address   String
  image     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  services  Service[]
  orders    Order[]
  Token     Token[]
}

model Token {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  token     String   @unique
  expiresAt DateTime
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Service {
  id         String   @id @default(uuid())
  merchantId String
  merchant   User     @relation(fields: [merchantId], references: [id])
  name       String
  type       String
  price      Int
  estimate   String?
  ironed     Boolean?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  items      Item[]
}

model Order {
  id            String    @id @default(uuid())
  number        String    @unique
  status        Int       @default(1)
  merchantId    String
  merchant      User      @relation(fields: [merchantId], references: [id])
  customerName  String?
  customerPhone String?
  estDone       DateTime?
  doneAt        DateTime?
  paymentStatus Int?
  paymentMethod String?
  total         Int?
  paid          Int?
  returned      Int?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  items         Item[]
}

model Item {
  id        String   @id @default(uuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  serviceId String
  service   Service  @relation(fields: [serviceId], references: [id])
  type      String
  amount    Int
  total     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
